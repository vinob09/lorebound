"""create character sheets tables

Revision ID: ecf3580c7d54
Revises: 5c0c2e7514f0
Create Date: 2024-09-03 13:05:08.513626

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")


# revision identifiers, used by Alembic.
revision = 'ecf3580c7d54'
down_revision = '5c0c2e7514f0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('games',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE games SET SCHEMA {SCHEMA};")

    op.create_table('skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('base_value', sa.Integer(), nullable=True),
    sa.Column('game_type', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE skills SET SCHEMA {SCHEMA};")

    op.create_table('characters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('character_name', sa.String(length=255), nullable=False),
    sa.Column('background', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['player_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE characters SET SCHEMA {SCHEMA};")

    op.create_table('character_attributes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.Column('additional_info', sa.Text(), nullable=True),
    sa.Column('game_type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE character_attributes SET SCHEMA {SCHEMA};")

    op.create_table('character_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('item_type', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('attributes', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE character_items SET SCHEMA {SCHEMA};")

    op.create_table('character_skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('skill_level', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE character_skills SET SCHEMA {SCHEMA};")

    op.create_table('delta_green_characters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('strength', sa.Integer(), nullable=True),
    sa.Column('constitution', sa.Integer(), nullable=True),
    sa.Column('dexterity', sa.Integer(), nullable=True),
    sa.Column('intelligence', sa.Integer(), nullable=True),
    sa.Column('power', sa.Integer(), nullable=True),
    sa.Column('charisma', sa.Integer(), nullable=True),
    sa.Column('hit_points', sa.Integer(), nullable=True),
    sa.Column('willpower_points', sa.Integer(), nullable=True),
    sa.Column('sanity_points', sa.Integer(), nullable=True),
    sa.Column('breaking_point', sa.Integer(), nullable=True),
    sa.Column('distinguishing_features', sa.Text(), nullable=True),
    sa.Column('motivations_mental_disorders', sa.Text(), nullable=True),
    sa.Column('incidents_sanity_loss', sa.Text(), nullable=True),
    sa.Column('physical_description', sa.Text(), nullable=True),
    sa.Column('bonds', sa.Text(), nullable=True),
    sa.Column('wounds', sa.Text(), nullable=True),
    sa.Column('ailments', sa.Text(), nullable=True),
    sa.Column('personal_details_notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE delta_green_characters SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('delta_green_characters')
    op.drop_table('character_skills')
    op.drop_table('character_items')
    op.drop_table('character_attributes')
    op.drop_table('characters')
    op.drop_table('skills')
    op.drop_table('games')
    # ### end Alembic commands ###
