"""create character models

Revision ID: 3aca05a210db
Revises: 5c0c2e7514f0
Create Date: 2024-09-05 20:04:27.495635

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")


# revision identifiers, used by Alembic.
revision = '3aca05a210db'
down_revision = '5c0c2e7514f0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('games',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE games SET SCHEMA {SCHEMA};")

    op.create_table('skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('base_value', sa.Integer(), nullable=True),
    sa.Column('game_type', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE skills SET SCHEMA {SCHEMA};")

    op.create_table('characters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('character_name', sa.String(length=255), nullable=False),
    sa.Column('url', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['player_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE characters SET SCHEMA {SCHEMA};")

    op.create_table('character_skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('skill_level', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE notes character_skills SCHEMA {SCHEMA};")

    op.create_table('delta_green_characters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('profession', sa.String(length=50), nullable=True),
    sa.Column('employer', sa.String(length=100), nullable=True),
    sa.Column('nationality', sa.String(length=50), nullable=True),
    sa.Column('sex', sa.String(), nullable=True),
    sa.Column('age_dob', sa.String(length=20), nullable=True),
    sa.Column('education_occupation_history', sa.Text(), nullable=True),
    sa.Column('strength_score', sa.Integer(), nullable=True),
    sa.Column('strength_x5', sa.Integer(), nullable=True),
    sa.Column('strength_features', sa.String(length=50), nullable=True),
    sa.Column('constitution_score', sa.Integer(), nullable=True),
    sa.Column('constitution_x5', sa.Integer(), nullable=True),
    sa.Column('constitution_features', sa.String(length=50), nullable=True),
    sa.Column('dexterity_score', sa.Integer(), nullable=True),
    sa.Column('dexterity_x5', sa.Integer(), nullable=True),
    sa.Column('dexterity_features', sa.String(length=50), nullable=True),
    sa.Column('intelligence_score', sa.Integer(), nullable=True),
    sa.Column('intelligence_x5', sa.Integer(), nullable=True),
    sa.Column('intelligence_features', sa.String(length=50), nullable=True),
    sa.Column('power_score', sa.Integer(), nullable=True),
    sa.Column('power_x5', sa.Integer(), nullable=True),
    sa.Column('power_features', sa.String(length=50), nullable=True),
    sa.Column('charisma_score', sa.Integer(), nullable=True),
    sa.Column('charisma_x5', sa.Integer(), nullable=True),
    sa.Column('charisma_features', sa.String(length=50), nullable=True),
    sa.Column('hit_points_maximum', sa.Integer(), nullable=True),
    sa.Column('hit_points_current', sa.Integer(), nullable=True),
    sa.Column('willpower_points_maximum', sa.Integer(), nullable=True),
    sa.Column('willpower_points_current', sa.Integer(), nullable=True),
    sa.Column('sanity_points_maximum', sa.Integer(), nullable=True),
    sa.Column('sanity_points_current', sa.Integer(), nullable=True),
    sa.Column('breaking_point_maximum', sa.Integer(), nullable=True),
    sa.Column('breaking_point_current', sa.Integer(), nullable=True),
    sa.Column('physical_description', sa.Text(), nullable=True),
    sa.Column('bonds', sa.Text(), nullable=True),
    sa.Column('bonds_score', sa.Text(), nullable=True),
    sa.Column('motivations_mental_disorders', sa.Text(), nullable=True),
    sa.Column('incidents_violence', sa.Integer(), nullable=True),
    sa.Column('incidents_helplessness', sa.Integer(), nullable=True),
    sa.Column('wounds_ailments', sa.Text(), nullable=True),
    sa.Column('armor_gear', sa.Text(), nullable=True),
    sa.Column('personal_details_notes', sa.Text(), nullable=True),
    sa.Column('developments_home_family', sa.Text(), nullable=True),
    sa.Column('special_training', sa.Text(), nullable=True),
    sa.Column('skill_stat_used', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE delta_green_characters SET SCHEMA {SCHEMA};")

    op.create_table('delta_weapons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('skill_percentage', sa.Float(), nullable=True),
    sa.Column('base_range', sa.String(), nullable=True),
    sa.Column('damage', sa.String(), nullable=True),
    sa.Column('armor_piercing', sa.Integer(), nullable=True),
    sa.Column('lethality', sa.Float(), nullable=True),
    sa.Column('kill_radius', sa.String(), nullable=True),
    sa.Column('ammo', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE delta_weapons SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('delta_weapons')
    op.drop_table('delta_green_characters')
    op.drop_table('character_skills')
    op.drop_table('characters')
    op.drop_table('skills')
    op.drop_table('games')
    # ### end Alembic commands ###
